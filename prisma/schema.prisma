// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Game {
  id Int @id @default(autoincrement())
  nama String
  maxRonde Int
  player Player[]
  round Ronde[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Player {
  id         Int      @id @default(autoincrement())
  nama_player String
  game_id    Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  game       Game @relation(fields: [game_id], references: [id], onDelete: Cascade)
  scores     Skor[]  // Relasi: 1 pemain bisa memiliki banyak skor
}

model Ronde {
  id        Int       @id @default(autoincrement())
  game_id   Int
  round_no  Int
  status    RoundStatus
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  game  Game @relation(fields: [game_id], references: [id], onDelete: Cascade)
  scores Skor[]

  @@unique([game_id, round_no])
}

model Skor {
  id        Int       @id @default(autoincrement())
  game_id   Int
  round_no  Int
  player_id Int
  skor      Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  round  Ronde @relation(fields: [game_id, round_no], references: [game_id, round_no], onDelete: Cascade)
  player Player @relation(fields: [player_id], references: [id], onDelete: Cascade)
}

// ENUM untuk status ronde
enum RoundStatus {
  PENDING
  ACTIVE
  FINISHED
}